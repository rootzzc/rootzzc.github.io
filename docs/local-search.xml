<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>配置ubuntu22服务器</title>
    <link href="/2023/11/06/%E9%85%8D%E7%BD%AEubuntu22%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2023/11/06/%E9%85%8D%E7%BD%AEubuntu22%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h1><h2 id="1-设置ssh远程登陆"><a href="#1-设置ssh远程登陆" class="headerlink" title="1. 设置ssh远程登陆"></a>1. 设置ssh远程登陆</h2><p>编辑服务器<code>/etc/ssh/sshd_config</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">PermitRootLogin <span class="hljs-built_in">yes</span><br>PasswordAuthentication <span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><p>服务器重启<code>sshd</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart sshd<br></code></pre></td></tr></table></figure><p>添加新用户并添加sudo权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo adduser &lt;username&gt;<br>sudo usermod -aG sudo &lt;username&gt;<br></code></pre></td></tr></table></figure><p>配置防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ufw <span class="hljs-built_in">enable</span><br>sudo ufw allow ssh<br></code></pre></td></tr></table></figure><p>禁用root登陆</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo passwd -l root<br></code></pre></td></tr></table></figure><h2 id="2-设置ssh免密登陆"><a href="#2-设置ssh免密登陆" class="headerlink" title="2. 设置ssh免密登陆"></a>2. 设置ssh免密登陆</h2><p>客户端生成公钥和密钥到<code>.ssh</code>目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen<br></code></pre></td></tr></table></figure><p>方法一：使用命令行拷贝公钥</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">ssh-<span class="hljs-keyword">copy</span><span class="language-bash">-<span class="hljs-built_in">id</span> -i ~/.ssh/id_rsa.pub -f root@192.168.235.22</span><br></code></pre></td></tr></table></figure><p>方法二：在服务器<code>/root/.ssh/authorized_keys</code>文件中手动拷贝公钥</p><h2 id="3-更新并安装软件包"><a href="#3-更新并安装软件包" class="headerlink" title="3. 更新并安装软件包"></a>3. 更新并安装软件包</h2><p>更新包管理器，安装必要的软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt update<br>apt upgrade<br>apt install -y vim git wget curl zsh<br>apt install -y gdb<br></code></pre></td></tr></table></figure><h2 id="4-配置软件"><a href="#4-配置软件" class="headerlink" title="4. 配置软件"></a>4. 配置软件</h2><h3 id="4-1-oh-my-zsh"><a href="#4-1-oh-my-zsh" class="headerlink" title="4.1 oh-my-zsh"></a>4.1 oh-my-zsh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装oh-my-zsh，会将默认shell改为zsh</span><br>sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)</span>&quot;</span><br></code></pre></td></tr></table></figure><p>配置<code>/root/.zshrc</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">plugins=(git z <span class="hljs-built_in">history</span> zsh-autosuggestions<br>web-search copyfile dirhistory colored-man-pages colorize<br>rand-quote sudo <span class="hljs-built_in">cp</span>)<br></code></pre></td></tr></table></figure><p>安装插件(zsh-autosuggestions需要额外安装)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions<br></code></pre></td></tr></table></figure><h3 id="4-2-python环境"><a href="#4-2-python环境" class="headerlink" title="4.2 python环境"></a>4.2 python环境</h3><p>下载miniconda</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/miniconda3<br>wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh<br>bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3<br><span class="hljs-built_in">rm</span> -rf ~/miniconda3/miniconda.sh<br><br>~/miniconda3/bin/conda init bash<br>~/miniconda3/bin/conda init zsh<br><br><span class="hljs-built_in">source</span> ~/.zshrc<br><br><span class="hljs-comment"># 配置登陆不启动conda环境</span><br>conda config --<span class="hljs-built_in">set</span> auto_activate_base <span class="hljs-literal">false</span><br><span class="hljs-comment"># 恢复</span><br>conda config --<span class="hljs-built_in">set</span> auto_activate_base <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>下载jupyterlab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install jupyterlab<br></code></pre></td></tr></table></figure><p>配置jupyterlab远程访问</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog"># 生成配置文件<br>jupyter lab --<span class="hljs-keyword">generate</span>-<span class="hljs-keyword">config</span><br></code></pre></td></tr></table></figure><p>配置文件<code>.jupyter/jupyter_lab_config.py</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">c.ServerApp.ip</span> = <span class="hljs-string">&#x27;*&#x27;</span><br><span class="hljs-attr">c.ServerApp.allow_remote_access</span> = <span class="hljs-literal">True</span><br><span class="hljs-attr">c.ServerApp.port</span> = <span class="hljs-number">8888</span><br></code></pre></td></tr></table></figure><p>配置密码登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">jupyter lab password<br></code></pre></td></tr></table></figure><h3 id="4-3-neovim"><a href="#4-3-neovim" class="headerlink" title="4.3 neovim"></a>4.3 neovim</h3><p>下载neovim（源码安装）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装依赖</span><br>sudo apt update<br>sudo apt install -y git make cmake g++ libtool libtool-bin autoconf automake pkg-config unzip<br><span class="hljs-comment"># 下载源代码</span><br>git <span class="hljs-built_in">clone</span> https://github.com/neovim/neovim.git<br><span class="hljs-built_in">cd</span> neovim<br>git checkout v0.9.0<br><br><span class="hljs-comment"># 编译和安装</span><br>make CMAKE_BUILD_TYPE=RelWithDebInfo <br>sudo make install<br><br><span class="hljs-comment"># 移动可执行文件</span><br><span class="hljs-built_in">cd</span> neovim/build/bin/<br>sudo <span class="hljs-built_in">mv</span> nvim /usr/local/bin/<br></code></pre></td></tr></table></figure><p>下载nvchad</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 下载</span><br>git <span class="hljs-built_in">clone</span> https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 &amp;&amp; nvim<br><span class="hljs-comment"># 更新</span><br>NvChadUpdate .<br><span class="hljs-comment"># 卸载</span><br><span class="hljs-built_in">rm</span> -rf ~/.config/nvim<br><span class="hljs-built_in">rm</span> -rf ~/.local/share/nvim<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo和Github部署个人博客</title>
    <link href="/2023/10/28/%E4%BD%BF%E7%94%A8Hexo%E5%92%8CGithub%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/10/28/%E4%BD%BF%E7%94%A8Hexo%E5%92%8CGithub%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="Motivation"><a href="#Motivation" class="headerlink" title="Motivation"></a>Motivation</h1><p>研二的时候曾经使用Hexo部署过个人博客，当时参与前端开发，所以主要记录的内容都是前端技术相关的内容。现在回头看当时记录博客的动机，主要是觉得新颖，想要尝试一下使用前端技术记录博客。博客记录了一段时间就停更了，这与我博文内容有很大关系，因为博文大部分都是复制粘贴其他博客中的内容，用于存档，并没有融入自己的想法，导致在重复的低级cv中丧失了耐心，于是没有坚持记录下去。</p><p>为什么现在又重新开始记录博客呢？主要是为了强迫自己思考，当然记录也是原因之一。书写文字的过程，同样也是思考的过程，平时一些遇见的问题，如果不深入思考，很容易误以为自己理解了。因此，落实到具体的文字中，可以强迫自己理解问题。</p><p>在春招求职的过程中，阅读了不少“图解”系列，图形能够很直观的表达出思维过程，相比抽象的文字，具象的图形能够更快的表达思路和含义，给自己订下个目标，要在年末前掌握制作”图解“思路的能力。</p><h1 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h1><ul><li>Hexo：将Markdown文件生成html等文件的博客框架，基于nodejs</li><li>Fluid：Hexo主题</li><li>PicGo：图床，用于将图片上传到CDN</li><li>Typora：Markdown文件编辑器</li><li>Github：代码托管平台</li><li>Git：代码版本管理软件</li></ul><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><p>提前安装：nodejs、git</p><p>安装步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli <span class="hljs-comment"># 全局安装hexo</span><br>hexo init &lt;floder&gt; <span class="hljs-comment"># 初始化文件夹</span><br><span class="hljs-built_in">cd</span> &lt;floder&gt;<br>npm install <span class="hljs-comment"># 安装第三方库</span><br></code></pre></td></tr></table></figure><p>文件目录</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs 1c">.<br>├── _config.yml  <span class="hljs-meta"># 配置文件</span><br>├── package.json  <span class="hljs-meta"># nodejs应用程序</span><br>├── scaffolds  <span class="hljs-meta"># 模版文件</span><br>├── source  <span class="hljs-meta"># Markdown源文件，除开_posts外，其他隐藏</span><br><span class="hljs-string">|   ├── _drafts</span><br><span class="hljs-string">|   └── _posts</span><br>└── themes  <span class="hljs-meta"># 主题</span><br></code></pre></td></tr></table></figure><h2 id="Fluid安装"><a href="#Fluid安装" class="headerlink" title="Fluid安装"></a>Fluid安装</h2><p>安装步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid  <span class="hljs-comment"># 本地安装fluid</span><br>npm update --save hexo-theme-fluid  <span class="hljs-comment"># 更新fluid</span><br></code></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># _config.yml</span><br><br><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span><br></code></pre></td></tr></table></figure><p>生成about文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page about<br></code></pre></td></tr></table></figure><h2 id="Typora-Picgo-Github-jsDelivr-CDN制作Markdown文档图床"><a href="#Typora-Picgo-Github-jsDelivr-CDN制作Markdown文档图床" class="headerlink" title="Typora + Picgo + Github + jsDelivr CDN制作Markdown文档图床"></a>Typora + Picgo + Github + jsDelivr CDN制作Markdown文档图床</h2><p>Github新建公共图床仓库，例如 picbed</p><p>Pico进入Github设置页面填写字段</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml">仓库名：<span class="hljs-tag">&lt;<span class="hljs-name">github_id</span>&gt;</span>/<span class="hljs-tag">&lt;<span class="hljs-name">repo_name</span>&gt;</span><br>Token：github setting中的access tokens<br>自定义域名：https://cdn.jsdelivr.net/hg/<span class="hljs-tag">&lt;<span class="hljs-name">github_id</span>&gt;</span>/<span class="hljs-tag">&lt;<span class="hljs-name">repo_name</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Typora在<code>图像</code>设置插入图片上传</p><h1 id="日常使用"><a href="#日常使用" class="headerlink" title="日常使用"></a>日常使用</h1><p>配置完上面的步骤后，就可以日常使用了</p><p>Hexo常用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init &lt;floder&gt;  <span class="hljs-comment"># 初始化文件夹</span><br>hexo new [layout] &lt;title&gt;  <span class="hljs-comment"># 添加新日志文件</span><br>hexo g  <span class="hljs-comment"># 生成静态文件</span><br>hexo s  <span class="hljs-comment"># 启动服务器</span><br>hexo clean  <span class="hljs-comment"># 清除缓存db.json和静态文件public/</span><br>hexo list  <span class="hljs-comment"># 列出网站数据</span><br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://hexo.io/zh-cn/docs/">hexo</a></p><p><a href="https://fluid-dev.github.io/hexo-fluid-docs/start/">fluid</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
